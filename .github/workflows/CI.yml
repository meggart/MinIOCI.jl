name: CI
# Run on master, any tag or any pull request
on:
  push:
    branches:
      - master
    tags: '*'
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - 1
        os:
          - ubuntu-latest
          - macOS-latest
        arch:
          - x64
    steps:
      - uses: actions/checkout@v2
      - env:
          MINIO_ACCESS_KEY: minio 
          MINIO_SECRET_KEY: minio123
          MINIO_REGION_NAME: aregion
        if: matrix.os == 'ubuntu-latest'
        run: curl -O https://dl.minio.io/server/minio/release/linux-amd64/minio  
      - env:
          MINIO_ACCESS_KEY: minio 
          MINIO_SECRET_KEY: minio123
          MINIO_REGION_NAME: aregion
        if: matrix.os == 'macOS-latest'
        run: curl -O https://dl.minio.io/server/minio/release/darwin-amd64/minio
      - run:
          chmod +x ./minio
          ./minio server --compat --quiet data 2>&1 > minio.log &
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - uses: julia-actions/julia-buildpkg@latest
      - run: |
          git config --global user.name Tester
          git config --global user.email te@st.er
      - uses: julia-actions/julia-runtest@latest